services:
  gmd_creator: #this is the main django app. Check django_db_setup.sh to create the admin and populate the database.
    container_name: gmd_creator
    build: .
    image: gmd_creator/gmd_creator
    ports:
      - "8000:8000"

    volumes: #these volumes were added for development purposes. Django can reload after file changes.
      - "./app/:/app"
      - ./static/media:/vol/app/media

    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # nginx: #Reverse proxy: provides an external URL for the containers. This is the MAIN entry point that actually responds on port 80.
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   #volumes:
  #   #- '${PWD}/configs/nginx_reverse_proxy.conf:/etc/nginx/conf.d/default.conf:ro'
  #   #- '/var/run/docker.sock:/tmp/docker.sock:ro'
  #   #- '/etc/apache2/ssl:/etc/nginx/certs'
  #   restart: always
  #   logging:
  #     options:
  #       max-size: 1g
  #   image: nginx
  #   depends_on: # NGINX will not run if the containers of the reverse proxy are not running.
  #     - gmd_creator
  #     - pycsw
  #

  db:
    container_name: db
    image: postgis/postgis:12-3.0-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: pycsw
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432

  pycsw:
    container_name: pycsw
    image: geopython/pycsw
    environment:
        PYCSW_SERVER_URL: http://localhost:8088
    ports:
      - 8088:8000
    volumes:
      - ./configs/pycsw.yml:/etc/pycsw/pycsw.yml


volumes:
  db-data:
